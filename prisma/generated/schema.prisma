// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(uuid())

  username   String  @unique
  firstName  String  @map("first_name")
  telegramId String? @unique @map("telegram_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  filters Filter[]

  @@map("users")
}

model Token {
  id String @id @default(uuid())

  token     String   @unique
  expiredAt DateTime @map("expired_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

model Filter {
  id String @id @default(uuid())

  brand                String
  model                String
  fromYear             String @map("from_year")
  city                 String
  lat                  String
  lon                  String
  distance             String
  fuelType             String @map("fuel_type") //petrol
  gearbox              String @map("gearbox") //manual
  engine_capacity_from String @map("engine_capacity_from") //1500
  engine_capacity_to   String @map("engine_capacity_to") //1650
  price_from           String @map("price_from") //10000
  price_to             String @map("price_to") //35000
  sortBy               String @default("created_at_first") @map("sort_by") //relevance_web

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  cars Car[]

  @@map("filters")
}

model Car {
  id String @id @default(uuid())

  image        String?
  title        String?
  link         String?
  description  String?
  price        String?
  milleage     String?
  fuel         String?
  transmission String?
  year         String?
  location     String?
  privateType  String? @map("private_type")
  publicAt     String? @map("public_at")

  filter   Filter @relation(fields: [filterId], references: [id])
  filterId String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("cars")
}
